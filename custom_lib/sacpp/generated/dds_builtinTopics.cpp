//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: dds_builtinTopics.cpp
//  Source: ../etc/idl/dds_builtinTopics.idl
//  Generated: Wed Sep 12 10:38:10 2018
//  OpenSplice V6.4.140320OSS
//  
//******************************************************************

#include "dds_builtinTopics.h"

#if DDS_USE_EXPLICIT_TEMPLATES
template class DDS_DCPSUVLSeq < DDS::String, struct StringSeq_uniq_>;
#endif

#if DDS_USE_EXPLICIT_TEMPLATES
template class DDS_DCPS_FArray_var< DDS::BuiltinTopicKey_t, DDS::BuiltinTopicKey_t_slice, struct DDS::BuiltinTopicKey_t_uniq_>;
template class DDS_DCPS_Array_forany< DDS::BuiltinTopicKey_t, DDS::BuiltinTopicKey_t_slice, struct DDS::BuiltinTopicKey_t_uniq_>;
#endif

template <>
DDS::BuiltinTopicKey_t_slice* DDS_DCPS_ArrayHelper < DDS::BuiltinTopicKey_t, DDS::BuiltinTopicKey_t_slice, DDS::BuiltinTopicKey_t_uniq_>::alloc ()
{
   return DDS::BuiltinTopicKey_t_alloc ();
}

template <>
void DDS_DCPS_ArrayHelper < DDS::BuiltinTopicKey_t, DDS::BuiltinTopicKey_t_slice, DDS::BuiltinTopicKey_t_uniq_>::copy (DDS::BuiltinTopicKey_t_slice *to, const DDS::BuiltinTopicKey_t_slice* from)
{
   DDS::BuiltinTopicKey_t_copy (to, from);
}

template <>
void DDS_DCPS_ArrayHelper < DDS::BuiltinTopicKey_t, DDS::BuiltinTopicKey_t_slice, DDS::BuiltinTopicKey_t_uniq_>::free (DDS::BuiltinTopicKey_t_slice *ptr)
{
   DDS::BuiltinTopicKey_t_free (ptr);
}

DDS::BuiltinTopicKey_t_slice * DDS::BuiltinTopicKey_t_alloc ()
{
   DDS::Long * ret = (DDS::Long*) new DDS::Long [3];
   return (BuiltinTopicKey_t_slice *) ret;
}

void DDS::BuiltinTopicKey_t_free (BuiltinTopicKey_t_slice * s)
{
   delete [] s;
}

void DDS::BuiltinTopicKey_t_copy
(
   BuiltinTopicKey_t_slice * to,
   const BuiltinTopicKey_t_slice * from
)
{
   const DDS::Long* sv = ( const DDS::Long*) from;
   DDS::Long* tv = (DDS::Long*) to;
   for (DDS::ULong i = 0; i < 3; i++) tv[i] = sv[i];
}

DDS::BuiltinTopicKey_t_slice * DDS::BuiltinTopicKey_t_dup
   (const BuiltinTopicKey_t_slice * from)
{
   BuiltinTopicKey_t_slice * to = BuiltinTopicKey_t_alloc ();
   BuiltinTopicKey_t_copy (to, from);
   return to;
}

#if DDS_USE_EXPLICIT_TEMPLATES
template class DDS_DCPSUFLSeq < DDS::Octet, struct octSeq_uniq_>;
#endif



